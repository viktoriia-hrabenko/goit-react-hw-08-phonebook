{"version":3,"file":"static/js/145.76f961f4.chunk.js","mappings":"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","sources":["components/Button/Button.styled.js","components/Button/Button.jsx","components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.jsx","components/ContactList/ContactItem/ContactItem.styled.js","components/ContactList/ContactItem/ContactItem.jsx","components/Notification/Notification.styled.js","components/Notification/Notification.jsx","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.jsx","components/SearchInput/SearchInput.styled.js","components/SearchInput/SearchInput.jsx","components/Section/Section.styled.js","components/Section/Section.jsx","pages/Phonebook.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const StyledButton = styled.button`\n  border: none;\n  outline: none;\n  border-radius: 5px;\n  padding: 10px 20px;\n  cursor: pointer;\n  background-color: #344e41;\n  font-size: 16px;\n  font-weight: 700;\n  color: white;\n  :hover {\n    background-color: #a3b18a;\n    box-shadow: inset 0px 0px 10px 5px rgba(0, 0, 0, 0.1);\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { StyledButton } from './Button.styled';\n\nconst Button = ({ title, type = 'button', onClick }) => {\n  return (\n    <StyledButton className=\"btn\" type={type} onClick={onClick}>\n      {title}\n    </StyledButton>\n  );\n};\n\nButton.propTypes = {\n  title: PropTypes.string.isRequired,\n  type: PropTypes.string,\n  onClick: PropTypes.func,\n};\n\nexport default Button;","import styled from 'styled-components';\n\nexport const StyledForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n  max-width: 500px;\n  margin: 0 auto;\n  .labelTitle {\n    font-size: 24px;\n    white-space: nowrap;\n    margin-right: 20px;\n  }\n  .formLabel {\n    display: flex;\n    justify-content: space-between;\n  }\n  .inputTag {\n    height: 35px;\n    width: 100%;\n    border: 2px solid lightgray;\n    border-radius: 5px;\n    font-size: 18px;\n    font-weight: 500;\n  }\n`;","import { useSelector, useDispatch } from 'react-redux';\nimport { useState } from 'react';\nimport { Notify } from 'notiflix';\nimport { addContact } from 'redux/contacts/operations';\nimport Button from 'components/Button/Button';\nimport { StyledForm } from './ContactForm.styled';\n\nconst ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const contacts = useSelector(state => state.contacts.items);\n  const dispatch = useDispatch();\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    if (\n      contacts.find(\n        contact => contact.name.toLowerCase() === name.toLowerCase()\n      )\n    ) {\n      Notify.failure(`${name} is already in contacts`);\n      return;\n    }\n    dispatch(addContact({ name: name, number: number }));\n    setName('');\n    setNumber('');\n  };\n\n  const handleChange = evt => {\n    const { name, value } = evt.target;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return console.log('Something went wrong');\n    }\n  };\n\n  return (\n    <StyledForm onSubmit={handleSubmit}>\n      <label className=\"formLabel\">\n        <span className=\"labelTitle\">Name:</span>\n        <input\n          className=\"inputTag\"\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          onChange={handleChange}\n          value={name}\n          required\n        />\n      </label>\n      <label className=\"formLabel\">\n        <span className=\"labelTitle\">Number:</span>\n        <input\n          className=\"inputTag\"\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          onChange={handleChange}\n          value={number}\n          required\n        />\n      </label>\n\n      <Button title=\"Add contact\" type=\"submit\" />\n    </StyledForm>\n  );\n};\n\nexport default ContactForm;","import styled from 'styled-components';\n\nexport const StyledContact = styled.div`\n  display: flex;\n  width: 100%;\n  .contactName {\n    display: block;\n    width: 60%;\n    font-size: 18px;\n    font-weight: 500;\n  }\n  .contactNumber {\n    width: 40%;\n    margin-right: 60px;\n    margin-top: 20px;\n    text-decoration: none;\n    font-size: 18px;\n    font-weight: 500;\n    color: black;\n  }\n  .contactNumber:hover {\n    color: #344e41;\n    text-decoration: underline;\n  }\n`;","import PropTypes from 'prop-types';\nimport { StyledContact } from './ContactItem.styled';\nconst ContactItem = ({ name, number }) => {\n  return (\n    <StyledContact>\n      <p className=\"contactName\">{name}:</p>\n      <a className=\"contactNumber\" href={'tel:' + number}>\n        {number}\n      </a>\n    </StyledContact>\n  );\n};\n\nContactItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n\nexport default ContactItem;","import styled from 'styled-components';\n\nexport const StyledNotification = styled.p`\n  margin: 0 auto;\n  text-align: center;\n  font-size: 22px;\n  font-weight: 700;\n  color: #bc4749;\n`;","import PropTypes from 'prop-types';\nimport { StyledNotification } from './Notification.styled';\n\nconst Notification = ({ text }) => (\n  <StyledNotification>{text}</StyledNotification>\n);\n\nNotification.propTypes = {\n  text: PropTypes.string.isRequired,\n};\n\nexport default Notification;","import styled from 'styled-components';\n\nexport const StyledList = styled.ul`\n  margin: 0 auto;\n  border: 2px solid rgba(0, 0, 0, 0.2);\n  border-radius: 5px;\n  overflow: hidden;\n  .listItem {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding: 10px 10px;\n  }\n  li:nth-child(odd) {\n    background-color: rgb(245, 245, 245);\n  }\n  .notification {\n    font-size: 18px;\n    text-align: center;\n  }\n`;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\nimport { fetchContacts, deleteContact } from 'redux/contacts/operations';\nimport { Loader } from 'components/Loader/Loader';\nimport ContactItem from './ContactItem/ContactItem';\nimport Notification from 'components/Notification/Notification';\nimport Button from 'components/Button/Button';\nimport { StyledList } from './ContactList.styled';\n\nconst ContactList = () => {\n  const contacts = useSelector(state => state.contacts.items);\n  const filter = useSelector(state => state.filter);\n  const loading = useSelector(state => state.isLoading);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const filteredContacts = () =>\n    contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n\n  const contactsList = filter ? filteredContacts() : contacts;\n\n  return (\n    <>\n      {loading && Loader}\n      {contactsList.length ? (\n        <StyledList>\n          {contactsList.map(({ id, name, number }) => (\n            <li className=\"listItem\" key={id}>\n              <ContactItem name={name} number={number} />\n              <Button\n                title=\"Delete\"\n                onClick={() => dispatch(deleteContact(id))}\n              />\n            </li>\n          ))}\n        </StyledList>\n      ) : (\n        <Notification\n          text={filter ? 'Could not find this name' : 'Contact list is empty'}\n        />\n      )}\n    </>\n  );\n};\n\nexport default ContactList;","import styled from 'styled-components';\n\nexport const StyledInput = styled.div`\n  display: flex;\n  align-items: baseline;\n  justify-content: space-between;\n  max-width: 500px;\n  margin: 0 auto 20px;\n  .inputTitle {\n    font-size: 24px;\n    white-space: nowrap;\n    margin-right: 20px;\n  }\n  .inputTag {\n    height: 35px;\n    width: 100%;\n    border: 2px solid lightgray;\n    border-radius: 6px;\n    font-size: 18px;\n    font-weight: 500;\n  }\n  .formInput {\n    padding: 8px;\n    font-size: 18px;\n  }\n`;","import { useSelector, useDispatch } from 'react-redux';\nimport { change } from 'redux/contacts/slice';\nimport { StyledInput } from './SearchInput.styled';\n\nconst SearchInput = () => {\n  const filter = useSelector(state => state.filter);\n  const dispatch = useDispatch();\n  const handleChange = evt => dispatch(change(evt.target.value));\n\n  return (\n    <StyledInput>\n      <p className=\"inputTitle\">Filter by name:</p>\n      <input\n        className=\"inputTag\"\n        type=\"text\"\n        name=\"filter\"\n        title=\"Please enter the name\"\n        onChange={handleChange}\n        value={filter}\n      />\n    </StyledInput>\n  );\n};\n\nexport default SearchInput;","import styled from 'styled-components';\n\nexport const StyledContainer = styled.div`\n    padding: 20px;\n    margin: 0 auto;\n`;\n\nexport const StyledTitle = styled.h1`\n    margin-bottom: 20px;\n    text-align: center;\n    font-size: 32px;\n`;","import PropTypes from 'prop-types';\nimport { StyledContainer, StyledTitle } from './Section.styled';\n\nconst Section = ({ title, children }) => {\n  return (\n    <StyledContainer>\n      <StyledTitle>{title}</StyledTitle>\n      {children}\n    </StyledContainer>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.any,\n};\n\nexport default Section;","import ContactForm from 'components/ContactForm/ContactForm';\nimport ContactList from 'components/ContactList/ContactList';\nimport SearchInput from 'components/SearchInput/SearchInput';\nimport Section from 'components/Section/Section';\n\nconst Phonebook = () => {\n  return (\n    <>\n      <Section title=\"Phonebook\">\n        <ContactForm />\n      </Section>\n      <Section title=\"Contacts\">\n        <SearchInput />\n        <ContactList />\n      </Section>\n    </>\n  );\n};\n\nexport default Phonebook;"],"names":["StyledButton","styled","title","type","onClick","className","StyledForm","useState","name","setName","number","setNumber","contacts","useSelector","state","items","dispatch","useDispatch","handleChange","evt","target","value","console","log","onSubmit","preventDefault","find","contact","toLowerCase","Notify","addContact","pattern","onChange","required","Button","StyledContact","href","StyledNotification","text","StyledList","filter","loading","isLoading","useEffect","fetchContacts","contactsList","includes","Loader","length","map","id","deleteContact","StyledInput","change","StyledContainer","StyledTitle","children"],"sourceRoot":""}